from aiogram import Bot, Router, F
from aiogram.types import Message
from aiogram.filters.state import State, StatesGroup
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from core.config import ADMIN_ID, ZENROWS_TOKEN

from openai import OpenAI
import asyncio

summary_router = Router()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è OpenRouter
client = OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key="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",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∫–ª—é—á
)

# –°–æ—Å—Ç–æ—è–Ω–∏—è FSM
class SummaryStates(StatesGroup):
    waiting_for_url = State()
    waiting_for_edit = State()  # –î–ª—è —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–≤–º–µ—Å—Ç–æ –ë–î –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞)
user_contexts = {}

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---
@summary_router.message(Command("summarize", "s"))
async def handle_summary_command(message: Message, state: FSMContext):
    args = message.text.split(maxsplit=1)
    
    if len(args) > 1 and is_valid_url(args[1]):
        await process_url(message, args[1], state)
    else:
        await message.answer("üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç–∞—Ç—å—é:")
        await state.set_state(SummaryStates.waiting_for_url)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–∫–∏
@summary_router.message(SummaryStates.waiting_for_url, F.text & ~F.text.startswith("/"))
async def handle_url_input(message: Message, state: FSMContext):
    if not is_valid_url(message.text):
        await message.reply("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
        return
    
    await process_url(message, message.text, state)

# –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@summary_router.message(SummaryStates.waiting_for_edit)
async def handle_edit_mode(message: Message, state: FSMContext):
    user_id = message.from_user.id
    context = user_contexts.get(user_id)
    
    if not context:
        await message.answer("‚ùå –°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /s")
        await state.clear()
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∂–µ–ª–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    context['messages'].append({
        "role": "user",
        "content": message.text
    })
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –ò–ò
    progress_msg = await message.reply("üîÑ –û–±–Ω–æ–≤–ª—è—é –≤—ã–∂–∏–º–∫—É...")
    
    try:
        new_summary = await generate_summary(context['messages'])
        await progress_msg.edit_text(
            f"üìù <b>–û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –≤—ã–∂–∏–º–∫–∞:</b>",
            parse_mode="HTML"
        )

        try:
            mess = await progress_msg.reply(new_summary.replace("\\n", "\n").replace('\"', '"'), parse_mode="HTML")
        except:
            mess = await progress_msg.reply(new_summary.replace("\\n", "\n").replace('\"', '"'))
        
        await mess.reply(
            "‚úèÔ∏è –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å /s –¥–ª—è –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏",
            parse_mode="HTML"
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context['messages'].append({
            "role": "assistant",
            "content": new_summary
        })
        
    except Exception as e:
        await progress_msg.edit_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

# --- –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---
async def process_url(message: Message, url: str, state: FSMContext):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã–∂–∏–º–∫–∏ –∏–∑ URL"""
    progress_msg = await message.reply(f"üîé –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Ç–∞—Ç—å—é...\n\n<code>{url}</code>", 
        parse_mode="HTML")
    
    try:
        # –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç—å–∏ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥)
        article_text = await fetch_article_text(url)  
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ò–ò
        messages = [
            {
                "role": "system",
                "content": (
                    "–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä. –¢—ã –ø–∏—à–µ—à—å –ø–æ—Å—Ç—ã –¥–ª—è Telegram –∫–∞–Ω–∞–ª–∞. –°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫—É—é –≤—ã–∂–∏–º–∫—É –∏–∑ —Å—Ç–∞—Ç—å–∏ "
                    "—Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (–ø—Ä–∏–º–µ—Ä–Ω–æ):\n"
                    "1. –û—Å–Ω–æ–≤–Ω–∞—è –º—ã—Å–ª—å (1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ)\n"
                    "2. –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å\n"
                    "3. CTA"
                    "–Ø–∑—ã–∫: —Ä—É—Å—Å–∫–∏–π. –ù–µ –¥–æ–±–∞–≤–ª—è–π –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
                    "–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Å—Ç–∏–ª—è:"
"""
üî• –ö–∞–∫ AI –ª–æ–º–∞–µ—Ç —à–∞–±–ª–æ–Ω—ã: 7 —Å–¥–≤–∏–≥–æ–≤ –≤ –æ–∂–∏–¥–∞–Ω–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å

–í—ã –∑–∞–º–µ—á–∞–ª–∏, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç—ã —Å—Ç–∞–ª–∏ –Ω–µ—Ç–µ—Ä–ø–µ–ª–∏–≤–µ–µ? –ß—Ç–æ ¬´—É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å¬ª —Ç–µ–ø–µ—Ä—å –æ–∑–Ω–∞—á–∞–µ—Ç ¬´–∞–¥–∞–ø—Ç–∏—Ä—É–π—Å—è –ø–æ–¥ –º–µ–Ω—è¬ª? 

–í —Å—Ç–∞—Ç—å–µ The Expectation Reset –ë—Ä–∞–π–∞–Ω –ë–∞–ª—å—Ñ—É—Ä (—ç–∫—Å–ø–µ—Ä—Ç –ø–æ growth, —ç–∫—Å-HubSpot) —Ä–∞–∑–±–∏—Ä–∞–µ—Ç, –∫–∞–∫ –ò–ò –Ω–µ –ø—Ä–æ—Å—Ç–æ —É–ª—É—á—à–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã, –∞ –º–µ–Ω—è–µ—Ç —Å–∞–º—É –ø—Ä–∏—Ä–æ–¥—É –æ–∂–∏–¥–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í–æ—Ç –≥–ª–∞–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã:

1. ¬´–Ø —Å–æ–∑–¥–∞—é¬ª ‚Üí ¬´–°–¥–µ–ª–∞–π –∑–∞ –º–µ–Ω—è¬ª
–†–∞–Ω—å—à–µ: Canva, Photoshop, Google Docs ‚Äî –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞.
–¢–µ–ø–µ—Ä—å: Midjourney –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–∏–∑–∞–π–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É, Devin –ø–∏—à–µ—Ç –∫–æ–¥ –≤–º–µ—Å—Ç–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞, –∞ EvenUp —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞ —á–∞—Å—ã –≤–º–µ—Å—Ç–æ –º–µ—Å—è—Ü–µ–≤.
–ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ò—â–∏—Ç–µ, –∫–∞–∫–∏–µ —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –º–æ–∂–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å ‚Äî –∏ –ø—Ä–µ–≤—Ä–∞—â–∞–π—Ç–µ –∏—Ö –≤ ¬´AI-—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤¬ª.

2. ¬´–Ø –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é¬ª ‚Üí ¬´–ü—Ä–æ–¥—É–∫—Ç –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ –º–Ω–µ¬ª
–ü—Ä–∏–º–µ—Ä: TikTok —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –±–µ–∑ –ø–æ–¥–ø–∏—Å–æ–∫, –∞ CRM Day.ai –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã.
–í—ã–≤–æ–¥: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—Ç—è—Ç —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—é ‚Äî AI –¥–æ–ª–∂–µ–Ω —É—á–∏—Ç—å—Å—è –Ω–∞ –∏—Ö –ø–æ–≤–µ–¥–µ–Ω–∏–∏.

3. ¬´–Ø –ø–ª–∞—á—É –∑–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏¬ª ‚Üí ¬´–ü–ª–∞—á—É –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç¬ª
–¢—Ä–µ–Ω–¥: Synthesia (–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ) –±–µ—Ä–µ—Ç –¥–µ–Ω—å–≥–∏ –∑–∞ –º–∏–Ω—É—Ç—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞, EvenUp ‚Äî –∑–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏—Å–∫, Intercom ‚Äî –∑–∞ —Ä–µ—à–µ–Ω–Ω—ã–π —Ç–∏–∫–µ—Ç.
–°–æ–≤–µ—Ç: –ü–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –º–æ–¥–µ–ª–∏ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ ‚Äî —Ü–µ–Ω–Ω–æ—Å—Ç—å —Ç–µ–ø–µ—Ä—å –≤ outcome, –∞ –Ω–µ –≤ ¬´–¥–æ—Å—Ç—É–ø–µ¬ª.

4. ¬´–Ø –∂–¥—É¬ª ‚Üí ¬´–ú–Ω–µ –Ω—É–∂–Ω–æ —Å–µ–π—á–∞—Å¬ª
GitHub Copilot –¥–∞–µ—Ç –æ—Ç–≤–µ—Ç –≤ IDE –∑–∞ —Å–µ–∫—É–Ω–¥—ã, Fin –æ—Ç Intercom —Ä–µ—à–∞–µ—Ç 70% –∑–∞–ø—Ä–æ—Å–æ–≤ –±–µ–∑ —á–µ–ª–æ–≤–µ–∫–∞.
–í—ã–≤–æ–¥: –°–∫–æ—Ä–æ—Å—Ç—å ‚Äî –Ω–æ–≤—ã–π must-have.

5. ¬´–Ø —É—á—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å¬ª ‚Üí ¬´–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É—á–∏—Ç—Å—è —É –º–µ–Ω—è¬ª
Google Gemini —Å–æ–∑–¥–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ UI –ø–æ–¥ –∑–∞–ø—Ä–æ—Å, Perplexity –º–µ–Ω—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è shopping-–∑–∞–ø—Ä–æ—Å–æ–≤.
–°–æ–≤–µ—Ç: –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã ‚Äî —Å–ª–µ–¥—É—é—â–∏–π —Ä—É–±–µ–∂.

‚ùóÔ∏è–ì–ª–∞–≤–Ω—ã–π –∏–Ω—Å–∞–π—Ç:
PMF (Product-Market Fit) –±–æ–ª—å—à–µ –Ω–µ —Å—Ç–∞—Ç–∏—á–µ–Ω ‚Äî –æ–Ω ¬´–∫–æ–ª–ª–∞–ø—Å–∏—Ä—É–µ—Ç¬ª –∏–∑-–∑–∞ —Å–∫–∞—á–∫–æ–≤ –æ–∂–∏–¥–∞–Ω–∏–π. –¢–æ, —á—Ç–æ –±—ã–ª–æ ¬´–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ö–æ—Ä–æ—à–æ¬ª –≤—á–µ—Ä–∞, —Å–µ–≥–æ–¥–Ω—è —É—Å—Ç–∞—Ä–µ–ª–æ.

–ß—Ç–æ –¥–µ–ª–∞—Ç—å?

–ê—É–¥–∏—Ç –±–æ–ª–∏ ‚Äî –∫–∞–∫–∏–µ —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –º–æ–∂–Ω–æ —É–±–∏—Ç—å AI?

–ì–∏–±–∫–∞—è –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è ‚Äî –ø—Ä–∏–≤—è–∑–∫–∞ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É, –∞ –Ω–µ –∫ ¬´–º–µ—Å—Ç—É¬ª.

–°–∫–æ—Ä–æ—Å—Ç—å –∫–∞–∫ —Ñ–∏—á–∞ ‚Äî –¥–∞–∂–µ B2B-–∫–ª–∏–µ–Ω—Ç—ã —Ç–µ–ø–µ—Ä—å —Ö–æ—Ç—è—Ç instant-—Ä–µ—à–µ–Ω–∏–π.

–ü–æ–ª–Ω—ã–π —Ä–∞–∑–±–æ—Ä —Å –∫–µ–π—Å–∞–º–∏ ‚Äî –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ —Å—Ç–∞—Ç—å–∏ (https://www.reforge.com/blog/the-expectation-reset).

P.S. –ê –∫–∞–∫–∏–µ –∏–∑ —ç—Ç–∏—Ö —Ç—Ä–µ–Ω–¥–æ–≤ —É–∂–µ –±—å—é—Ç –ø–æ –≤–∞—à–µ–º—É –ø—Ä–æ–¥—É–∫—Ç—É? –î–µ–ª–∏—Ç–µ—Å—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ö! üëá

---

–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ Telegram-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:  
- **–ñ–∏—Ä–Ω—ã–π**: `<b>—Ç–µ–∫—Å—Ç</b>` –∏–ª–∏ `<strong>—Ç–µ–∫—Å—Ç</strong>`  
- *–ö—É—Ä—Å–∏–≤*: `<i>—Ç–µ–∫—Å—Ç</i>` –∏–ª–∏ `<em>—Ç–µ–∫—Å—Ç</em>`  
- <u>–ü–æ–¥—á—ë—Ä–∫–Ω—É—Ç—ã–π</u>: `<u>—Ç–µ–∫—Å—Ç</u>` –∏–ª–∏ `<ins>—Ç–µ–∫—Å—Ç</ins>`  
- ~~–ó–∞—á—ë—Ä–∫–Ω—É—Ç—ã–π~~: `<s>—Ç–µ–∫—Å—Ç</s>`, `<strike>—Ç–µ–∫—Å—Ç</strike>` –∏–ª–∏ `<del>—Ç–µ–∫—Å—Ç</del>`  
- `–ö–æ–¥`: `<code>—Ç–µ–∫—Å—Ç</code>`  
- –ë–ª–æ–∫ –∫–æ–¥–∞: `<pre>—Ç–µ–∫—Å—Ç</pre>`  
- ||–°–ø–æ–π–ª–µ—Ä||: `<tg-spoiler>—Ç–µ–∫—Å—Ç</tg-spoiler>`  
- [–°—Å—ã–ª–∫–∞](https://example.com): `<a href="URL">—Ç–µ–∫—Å—Ç</a>`  
- > –¶–∏—Ç–∞—Ç–∞: `<blockquote>—Ç–µ–∫—Å—Ç</blockquote>`  
- –£–ø–æ–º–∏–Ω–∞–Ω–∏–µ: `<a href="tg://user?id=123">@—é–∑–µ—Ä</a>`  

–î—Ä—É–≥–∏–µ HTML-—Ç–µ–≥–∏ –∏–ª–∏ Markdown **–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è**.
"""
                )
            },
            {
                "role": "user",
                "content": f"–°–æ–∑–¥–∞–π –≤—ã–∂–∏–º–∫—É –∏–∑ —ç—Ç–æ–π —Å—Ç–∞—Ç—å–∏:\n\n{article_text}"
            }
        ]
        
        summary = await generate_summary(messages)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        user_contexts[message.from_user.id] = {
            'url': url,
            'messages': messages + [{"role": "assistant", "content": summary}]
        }
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
        await progress_msg.edit_text(
            f"üìù <b>–ì–æ—Ç–æ–≤–∞—è –≤—ã–∂–∏–º–∫–∞:</b>",
            parse_mode="HTML"
        )

        try:
            mess = await progress_msg.reply(summary.replace("\\n", "\n").replace('\"', '"'), parse_mode="HTML")
        except:
            mess = await progress_msg.reply(summary.replace("\\n", "\n").replace('\"', '"'))

        await mess.reply("‚úèÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–º, –∏ —è –∞–¥–∞–ø—Ç–∏—Ä—É—é –≤—ã–∂–∏–º–∫—É.")
        
        await state.set_state(SummaryStates.waiting_for_edit)
    
    except Exception as e:
        await progress_msg.edit_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        await state.clear()

async def generate_summary(messages: list) -> str:
    """–ó–∞–ø—Ä–æ—Å –∫ OpenRouter API"""
    completion = client.chat.completions.create(
        model="tngtech/deepseek-r1t-chimera:free",  # –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –º–æ–¥–µ–ª—å
        messages=messages,
        temperature=0.3,  # –î–ª—è –º–µ–Ω—å—à–µ–π "–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏"
        max_tokens=5000
    )

    print(completion)

    return completion.choices[0].message.reasoning

def is_valid_url(text: str) -> bool:
    return text.startswith(("http://", "https://"))

async def fetch_article_text(url: str) -> str:
    # return res
    from zenrows import ZenRowsClient

    client = ZenRowsClient(ZENROWS_TOKEN)
    params = {"js_render":"true","wait":"15000","response_type":"markdown"}

    response = client.get(url, params=params)
    return response.text